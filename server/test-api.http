### Brain Monitor Server API 测试文件
### 使用 VS Code 的 REST Client 扩展或 Postman 进行测试

### 1. 健康检查
GET http://localhost:3000/health

### 2. 机构登录
POST http://localhost:3000/api/auth/institution/login
Content-Type: application/json

{
  "institutionId": "2",
  "password": "2"
}

### 3. 医护人员注册
POST http://localhost:3000/api/auth/medical-staff/register
Content-Type: application/json

{
  "staffId": "004",
  "name": "王医生",
  "account": "2",
  "password": "123456",
  "phone": "13800138008",
  "department": "神经科",
  "position": "主治医师",
  "institutionId": 1
}

### 4. 医护人员登录
POST http://localhost:3000/api/auth/medical-staff/login
Content-Type: application/json

{
  "account": "2",
  "password": "123456"
}

### 5. 获取当前用户信息
GET http://localhost:3000/api/auth/me
Authorization: Bearer {{authToken}}

### 6. 获取测试者列表
GET http://localhost:3000/api/testers/my-testers
Authorization: Bearer {{authToken}}

### 7. 搜索测试者
GET http://localhost:3000/api/testers/my-testers?search=张三
Authorization: Bearer {{authToken}}

### 8. 添加新测试者
POST http://localhost:3000/api/testers
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "testerId": "008",
  "name": "陈十",
  "age": "33",
  "gender": "女",
  "phone": "13800138010"
}

### 9. 创建测试记录
POST http://localhost:3000/api/test-records
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "testerId": 1
}

### 10. 更新测试状态
PUT http://localhost:3000/api/test-records/1/status
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "testStatus": "已完成",
  "testEndTime": "2024-01-01T12:00:00Z",
  "mocaScore": 25,
  "mmseScore": 28,
  "gripStrength": 35.5
}

### 11. 获取测试记录详情
GET http://localhost:3000/api/test-records/1
Authorization: Bearer {{authToken}}

### 12. 获取测试历史记录
GET http://localhost:3000/api/test-records/tester/1/history
Authorization: Bearer {{authToken}}

### 13. 获取测试记录报告数据（新增）
GET http://localhost:3000/api/test-records/1/report
Authorization: Bearer {{authToken}}

### 14. 上传脑电波数据
POST http://localhost:3000/api/brainwave-data/upload
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "testRecordId": 1,
  "dataType": "睁眼",
  "dataPoints": [1.2, 1.5, 1.8, 2.1, 1.9, 1.6, 1.3, 1.7, 2.0, 1.4]
}

### 15. 保存测试结果
POST http://localhost:3000/api/test-results
Authorization: Bearer {{authToken}}
Content-Type: application/json

{
  "testRecordId": 1,
  "resultType": "睁眼",
  "alphaPower": 0.15,
  "betaPower": 0.25,
  "thetaPower": 0.10,
  "deltaPower": 0.05,
  "gammaPower": 0.30,
  "totalPower": 0.85,
  "dominantFrequency": 12.5,
  "coherenceScore": 0.75,
  "attentionScore": 0.80,
  "relaxationScore": 0.70
}

### 16. 获取测试结果
GET http://localhost:3000/api/test-results/test-record/1
Authorization: Bearer {{authToken}}

### 17. 退出登录
POST http://localhost:3000/api/auth/logout
Authorization: Bearer {{authToken}}

### 变量设置
# 在 VS Code REST Client 中，登录成功后会自动设置 authToken 变量
# 或者手动设置：
# @authToken = your_jwt_token_here

